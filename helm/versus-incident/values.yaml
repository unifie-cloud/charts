## @section Global parameters
## Please, note that this will override the parameters, including dependencies, configured to use the global value
##

app:
  image: "ghcr.io/versuscontrol/versus-incident:v1.0.1"
  slack_message: |
    *Critical Error in {{.ServiceName}}*
    ----------
    Error Details:
    ```
    {{.Logs}}
    ```
    ----------
    Owner <@{{.UserID}}> please investigate
  config: |
    name: versus
    host: 0.0.0.0
    port: 3000

    alert:
      debug_body: true  # Default value, will be overridden by DEBUG_BODY env var

      slack:
        enable: false  # Default value, will be overridden by SLACK_ENABLE env var
        token: ${SLACK_TOKEN}            # From environment
        channel_id: ${SLACK_CHANNEL_ID}  # From environment
        template_path: "config/slack_message.tmpl"

      telegram:
        enable: false  # Default value, will be overridden by TELEGRAM_ENABLE env var
        bot_token: ${TELEGRAM_BOT_TOKEN} # From environment
        chat_id: ${TELEGRAM_CHAT_ID} # From environment
        template_path: "config/telegram_message.tmpl"

      email:
        enable: false # Default value, will be overridden by EMAIL_ENABLE env var
        smtp_host: ${SMTP_HOST} # From environment
        smtp_port: ${SMTP_PORT} # From environment
        username: ${SMTP_USERNAME} # From environment
        password: ${SMTP_PASSWORD} # From environment
        to: ${EMAIL_TO} # From environment
        subject: ${EMAIL_SUBJECT} # From environment
        template_path: "config/email_message.tmpl"

    queue:
      enable: true

      # AWS SNS
      sns:
        enable: false
        https_endpoint_subscription_path: /sns # URI to receive SNS messages, e.g. ${host}:${port}/sns or ${https_endpoint_subscription}/sns
        # Options If you want to automatically create an sns subscription
        https_endpoint_subscription: ${SNS_HTTPS_ENDPOINT_SUBSCRIPTION} # If the user configures an HTTPS endpoint, then an SNS subscription will be automatically created, e.g. https://your-domain.com
        topic_arn: ${SNS_TOPIC_ARN}

env:
  DEBUG_BODY: "false" #  Set to `true` to enable print body send to Versus Incident.
  SLACK_ENABLE: "" #  Set to `true` to enable Slack notifications.
  SLACK_TOKEN: "" #  The authentication token for your Slack bot.
  SLACK_CHANNEL_ID: "" #  The ID of the Slack channel where alerts will be sent.
  TELEGRAM_ENABLE: "" #  Set to `true` to enable Telegram notifications.
  TELEGRAM_BOT_TOKEN: "" #  The authentication token for your Telegram bot.
  TELEGRAM_CHAT_ID: "" #  The chat ID where alerts will be sent.
  EMAIL_ENABLE: "" #  Set to `true` to enable email notifications.
  SMTP_HOST: "" #  The SMTP server hostname (e.g., smtp.gmail.com).
  SMTP_PORT: "" #  The SMTP server port (e.g., 587 for TLS).
  SMTP_USERNAME: "" #  The username/email for SMTP authentication.
  SMTP_PASSWORD: "" #  The password or app-specific password for SMTP authentication.
  EMAIL_TO: "" #  The recipient email address for incident notifications.
  EMAIL_SUBJECT: "" #  The subject line for email notifications.
  SNS_ENABLE: "" #  Set to `true` to enable receive Alert Messages from SNS.
  SNS_HTTPS_ENDPOINT_SUBSCRIPTION: "" #  This specifies the HTTPS endpoint to which SNS sends messages. When an HTTPS endpoint is configured, an SNS subscription is automatically created. If no endpoint is configured, you must create the SNS subscription manually using the CLI or AWS Console. E.g. `https://your-domain.com: "" #
  SNS_TOPIC_ARN: "" #  AWS ARN of the SNS topic to subscribe to
